{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN AUTH WITH  GMAIL\\\\mern-auth-frontend\\\\src\\\\pages\\\\VerifyOTP.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VerifyOTP() {\n  _s();\n  var _location$state;\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Get email from location state (passed from Signup)\n  const email = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email) {\n      setMessage('Email not found. Please signup first.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/verify-otp', {\n        email,\n        otp\n      });\n      setMessage(res.data.message);\n      if (res.status === 200) {\n        // After successful verification, go to login page (later)\n        alert('Email verified! Now you can login.');\n        navigate('/login'); // we'll create login page next\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"OTP sent to: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifyOTP, \"WEEy4l+G8bn3G7oT88SKQfu3T9I=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = VerifyOTP;\nvar _c;\n$RefreshReg$(_c, \"VerifyOTP\");","map":{"version":3,"names":["React","useState","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","VerifyOTP","_s","_location$state","otp","setOtp","message","setMessage","location","navigate","email","state","handleSubmit","e","preventDefault","res","post","data","status","alert","error","_error$response","_error$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/MERN AUTH WITH  GMAIL/mern-auth-frontend/src/pages/VerifyOTP.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport default function VerifyOTP() {\r\n    const [otp, setOtp] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    // Get email from location state (passed from Signup)\r\n    const email = location.state?.email;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!email) {\r\n            setMessage('Email not found. Please signup first.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/verify-otp', { email, otp });\r\n            setMessage(res.data.message);\r\n            if (res.status === 200) {\r\n                // After successful verification, go to login page (later)\r\n                alert('Email verified! Now you can login.');\r\n                navigate('/login'); // we'll create login page next\r\n            }\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || 'Error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Verify OTP</h2>\r\n            <p>OTP sent to: {email}</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter OTP\"\r\n                    value={otp}\r\n                    onChange={e => setOtp(e.target.value)}\r\n                    required\r\n                /><br />\r\n                <button type=\"submit\">Verify</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
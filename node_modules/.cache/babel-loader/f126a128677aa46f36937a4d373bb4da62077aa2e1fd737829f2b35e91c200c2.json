{"ast":null,"code":"var _jsxFileName = \"D:\\\\Edu Project\\\\mern-auth-frontend\\\\src\\\\components\\\\CourseCard.jsx\",\n  _s = $RefreshSig$();\n// src/components/CourseCard.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./CourseCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseCard({\n  course,\n  onFavouriteToggle,\n  showToast\n}) {\n  _s();\n  var _course$title, _course$description;\n  const [isFavorite, setIsFavorite] = useState(false);\n  const navigate = useNavigate();\n\n  // Get the course ID - handle both MongoDB _id and regular id\n  const getCourseId = () => {\n    return course._id || course.id;\n  };\n\n  // Check if user is authenticated\n  const isUserAuthenticated = () => {\n    // Check for auth token in localStorage\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n\n    // You can also check for user data\n    const userData = localStorage.getItem('userData') || localStorage.getItem('user');\n    return !!(token || userData);\n  };\n  useEffect(() => {\n    // Check if course is in favorites on component mount (only if user is authenticated)\n    const checkFavoriteStatus = () => {\n      try {\n        if (!isUserAuthenticated()) {\n          setIsFavorite(false);\n          return;\n        }\n        const courseId = getCourseId();\n        if (!courseId) return; // Exit if no valid ID\n\n        const favorites = JSON.parse(localStorage.getItem('userFavourites') || '[]');\n        setIsFavorite(favorites.includes(courseId));\n      } catch (error) {\n        console.error('Error checking favorite status:', error);\n      }\n    };\n    checkFavoriteStatus();\n  }, [course._id, course.id]); // Watch both possible ID properties\n\n  const handleFavoriteToggle = e => {\n    e.preventDefault(); // Prevent any parent click events\n    e.stopPropagation();\n\n    // Check if user is authenticated first\n    if (!isUserAuthenticated()) {\n      // Show toast notification about needing to login\n      if (showToast) {\n        showToast('Please login to add courses to favorites', 'info');\n      }\n\n      // Redirect to login page after a short delay\n      setTimeout(() => {\n        navigate('/login'); // Change to '/signup' if you prefer signup page\n      }, 1500);\n      return;\n    }\n    try {\n      const courseId = getCourseId();\n      if (!courseId) {\n        console.error('No valid course ID found');\n        if (showToast) {\n          showToast('Error: Course ID not found', 'error');\n        }\n        return;\n      }\n      const favorites = JSON.parse(localStorage.getItem('userFavourites') || '[]');\n      let updatedFavorites;\n      let message;\n      if (isFavorite) {\n        // Remove from favorites\n        updatedFavorites = favorites.filter(id => id !== courseId);\n        message = 'Removed from favorites';\n        setIsFavorite(false);\n      } else {\n        // Add to favorites\n        updatedFavorites = [...favorites, courseId];\n        message = 'Added to favorites';\n        setIsFavorite(true);\n      }\n      localStorage.setItem('userFavourites', JSON.stringify(updatedFavorites));\n\n      // Show toast notification if showToast is provided\n      if (showToast) {\n        showToast(message, 'success');\n      }\n\n      // Call parent callback if provided\n      if (onFavouriteToggle) {\n        onFavouriteToggle(courseId, !isFavorite);\n      }\n    } catch (error) {\n      console.error('Error toggling favorite:', error);\n      if (showToast) {\n        showToast('Error updating favorites', 'error');\n      }\n    }\n  };\n\n  // Handle image URL - use thumbnailUrl from backend if available, otherwise fallback to image\n  const getImageUrl = () => {\n    if (course.thumbnailUrl) {\n      return `http://localhost:5000${course.thumbnailUrl}`;\n    }\n    return course.image || '/default-course-image.jpg';\n  };\n\n  // Debug: Log course data to help identify the issue\n  console.log('Course data:', course);\n  const courseId = getCourseId();\n\n  // If no valid course ID, show error state\n  if (!courseId) {\n    console.error('Course missing ID:', course);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm course-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title text-danger\",\n          children: \"Error: Invalid Course Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Course ID is missing or invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  const isAuthenticated = isUserAuthenticated();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-sm course-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-image-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(),\n        className: \"card-img-top\",\n        alt: course.title,\n        style: {\n          height: \"180px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: ((_course$title = course.title) === null || _course$title === void 0 ? void 0 : _course$title.slice(0, 50)) || \"Untitled Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [((_course$description = course.description) === null || _course$description === void 0 ? void 0 : _course$description.slice(0, 100)) || \"No description available\", \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), course.instructor && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), \" \", course.instructor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success mb-3\",\n        children: course.isFree ? \"Free\" : `â‚¹${course.price || 0}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-auto position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/courses/${courseId}`,\n          className: \"btn btn-primary w-100\",\n          children: \"View Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `favorite-btn ${isFavorite ? 'favorite-active' : ''} ${!isAuthenticated ? 'favorite-disabled' : ''}`,\n          onClick: handleFavoriteToggle,\n          title: !isAuthenticated ? 'Login to add to favorites' : isFavorite ? 'Remove from favorites' : 'Add to favorites',\n          \"aria-label\": !isAuthenticated ? 'Login to add to favorites' : isFavorite ? 'Remove from favorites' : 'Add to favorites',\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi ${isFavorite ? 'bi-heart-fill' : 'bi-heart'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseCard, \"s8WbQe949tI4YNKmFsC0C1RyolU=\", false, function () {\n  return [useNavigate];\n});\n_c = CourseCard;\nexport default CourseCard;\nvar _c;\n$RefreshReg$(_c, \"CourseCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","CourseCard","course","onFavouriteToggle","showToast","_s","_course$title","_course$description","isFavorite","setIsFavorite","navigate","getCourseId","_id","id","isUserAuthenticated","token","localStorage","getItem","userData","checkFavoriteStatus","courseId","favorites","JSON","parse","includes","error","console","handleFavoriteToggle","e","preventDefault","stopPropagation","setTimeout","updatedFavorites","message","filter","setItem","stringify","getImageUrl","thumbnailUrl","image","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isAuthenticated","src","alt","title","style","height","objectFit","slice","description","instructor","isFree","price","to","onClick","_c","$RefreshReg$"],"sources":["D:/Edu Project/mern-auth-frontend/src/components/CourseCard.jsx"],"sourcesContent":["// src/components/CourseCard.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./CourseCard.css\";\r\n\r\nfunction CourseCard({ course, onFavouriteToggle, showToast }) {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Get the course ID - handle both MongoDB _id and regular id\r\n  const getCourseId = () => {\r\n    return course._id || course.id;\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isUserAuthenticated = () => {\r\n    // Check for auth token in localStorage\r\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\r\n    \r\n    // You can also check for user data\r\n    const userData = localStorage.getItem('userData') || localStorage.getItem('user');\r\n    \r\n    return !!(token || userData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if course is in favorites on component mount (only if user is authenticated)\r\n    const checkFavoriteStatus = () => {\r\n      try {\r\n        if (!isUserAuthenticated()) {\r\n          setIsFavorite(false);\r\n          return;\r\n        }\r\n\r\n        const courseId = getCourseId();\r\n        if (!courseId) return; // Exit if no valid ID\r\n\r\n        const favorites = JSON.parse(localStorage.getItem('userFavourites') || '[]');\r\n        setIsFavorite(favorites.includes(courseId));\r\n      } catch (error) {\r\n        console.error('Error checking favorite status:', error);\r\n      }\r\n    };\r\n\r\n    checkFavoriteStatus();\r\n  }, [course._id, course.id]); // Watch both possible ID properties\r\n\r\n  const handleFavoriteToggle = (e) => {\r\n    e.preventDefault(); // Prevent any parent click events\r\n    e.stopPropagation();\r\n\r\n    // Check if user is authenticated first\r\n    if (!isUserAuthenticated()) {\r\n      // Show toast notification about needing to login\r\n      if (showToast) {\r\n        showToast('Please login to add courses to favorites', 'info');\r\n      }\r\n      \r\n      // Redirect to login page after a short delay\r\n      setTimeout(() => {\r\n        navigate('/login'); // Change to '/signup' if you prefer signup page\r\n      }, 1500);\r\n      \r\n      return;\r\n    }\r\n\r\n    try {\r\n      const courseId = getCourseId();\r\n      if (!courseId) {\r\n        console.error('No valid course ID found');\r\n        if (showToast) {\r\n          showToast('Error: Course ID not found', 'error');\r\n        }\r\n        return;\r\n      }\r\n\r\n      const favorites = JSON.parse(localStorage.getItem('userFavourites') || '[]');\r\n      let updatedFavorites;\r\n      let message;\r\n\r\n      if (isFavorite) {\r\n        // Remove from favorites\r\n        updatedFavorites = favorites.filter(id => id !== courseId);\r\n        message = 'Removed from favorites';\r\n        setIsFavorite(false);\r\n      } else {\r\n        // Add to favorites\r\n        updatedFavorites = [...favorites, courseId];\r\n        message = 'Added to favorites';\r\n        setIsFavorite(true);\r\n      }\r\n\r\n      localStorage.setItem('userFavourites', JSON.stringify(updatedFavorites));\r\n\r\n      // Show toast notification if showToast is provided\r\n      if (showToast) {\r\n        showToast(message, 'success');\r\n      }\r\n\r\n      // Call parent callback if provided\r\n      if (onFavouriteToggle) {\r\n        onFavouriteToggle(courseId, !isFavorite);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n      if (showToast) {\r\n        showToast('Error updating favorites', 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle image URL - use thumbnailUrl from backend if available, otherwise fallback to image\r\n  const getImageUrl = () => {\r\n    if (course.thumbnailUrl) {\r\n      return `http://localhost:5000${course.thumbnailUrl}`;\r\n    }\r\n    return course.image || '/default-course-image.jpg';\r\n  };\r\n\r\n  // Debug: Log course data to help identify the issue\r\n  console.log('Course data:', course);\r\n\r\n  const courseId = getCourseId();\r\n\r\n  // If no valid course ID, show error state\r\n  if (!courseId) {\r\n    console.error('Course missing ID:', course);\r\n    return (\r\n      <div className=\"card shadow-sm course-card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title text-danger\">Error: Invalid Course Data</h5>\r\n          <p className=\"card-text\">Course ID is missing or invalid.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isAuthenticated = isUserAuthenticated();\r\n\r\n  return (\r\n    <div className=\"card shadow-sm course-card\">\r\n      <div className=\"course-image-wrapper\">\r\n        <img\r\n          src={getImageUrl()}\r\n          className=\"card-img-top\"\r\n          alt={course.title}\r\n          style={{ height: \"180px\", objectFit: \"cover\" }}\r\n        />\r\n      </div>\r\n      <div className=\"card-body d-flex flex-column\">\r\n        <h5 className=\"card-title\">{course.title?.slice(0, 50) || \"Untitled Course\"}</h5>\r\n        <p className=\"card-text\">\r\n          {course.description?.slice(0, 100) || \"No description available\"}...\r\n        </p>\r\n\r\n        {/* Show instructor if available from backend */}\r\n        {course.instructor && (\r\n          <p className=\"text-muted mb-2\">\r\n            <strong>Instructor:</strong> {course.instructor}\r\n          </p>\r\n        )}\r\n\r\n        <p className=\"text-success mb-3\">\r\n          {course.isFree ? \"Free\" : `â‚¹${course.price || 0}`}\r\n        </p>\r\n\r\n        <div className=\"mt-auto position-relative\">\r\n          <Link to={`/courses/${courseId}`} className=\"btn btn-primary w-100\">\r\n            View Course\r\n          </Link>\r\n          {/* Favorite Button */}\r\n          <button\r\n            className={`favorite-btn ${isFavorite ? 'favorite-active' : ''} ${!isAuthenticated ? 'favorite-disabled' : ''}`}\r\n            onClick={handleFavoriteToggle}\r\n            title={\r\n              !isAuthenticated \r\n                ? 'Login to add to favorites' \r\n                : isFavorite \r\n                  ? 'Remove from favorites' \r\n                  : 'Add to favorites'\r\n            }\r\n            aria-label={\r\n              !isAuthenticated \r\n                ? 'Login to add to favorites' \r\n                : isFavorite \r\n                  ? 'Remove from favorites' \r\n                  : 'Add to favorites'\r\n            }\r\n          >\r\n            <i className={`bi ${isFavorite ? 'bi-heart-fill' : 'bi-heart'}`}></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}